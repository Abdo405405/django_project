# Generated by Django 5.0.2 on 2024-03-01 07:23

import Product_Management_API.models
import django.core.validators
import django.db.models.deletion
import shortuuid.django_fields
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet=None, length=10, max_length=20, prefix='cat', unique=True)),
                ('title', models.CharField(db_index=True, max_length=255, unique=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('image', models.ImageField(blank=True, upload_to='Categories')),
                ('description', models.TextField(blank=True, null=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='Product_Management_API.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('product_url', models.CharField(blank=True, max_length=255, unique=True)),
                ('image', models.ImageField(blank=True, max_length=500, upload_to='All Products')),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, default='This is the product', null=True)),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=14)),
                ('Shipping_Fee', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=14)),
                ('specifications', models.TextField(blank=True, null=True)),
                ('product_status', models.CharField(choices=[('', ''), ('in_review', 'In Review'), ('published', 'Published'), ('discontinued', 'Discontinued'), ('on_sale', 'On Sale')], default='', max_length=250)),
                ('is_new', models.BooleanField(default=False)),
                ('instock', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('qty_in_stock', models.PositiveIntegerField(default=0)),
                ('digital', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Product_Management_API.category')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategory', to='Product_Management_API.category')),
                ('vendor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.vendor')),
            ],
            options={
                'verbose_name': 'Product',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ProductFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField(blank=True)),
                ('rating', models.IntegerField(blank=True, choices=[(1, '★☆☆☆☆'), (2, '★★☆☆☆'), (3, '★★★☆☆'), (4, '★★★★☆'), (5, '★★★★★')], default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.customer')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Product_Management_API.product')),
            ],
            options={
                'verbose_name': 'Product Feedback',
            },
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=Product_Management_API.models.productimages_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='Product_Management_API.product')),
            ],
            options={
                'verbose_name': 'Product Images',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.customer')),
                ('product', models.ManyToManyField(to='Product_Management_API.product')),
            ],
            options={
                'verbose_name': 'Wishlist',
            },
        ),
    ]
